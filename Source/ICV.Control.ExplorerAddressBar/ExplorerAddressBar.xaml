<mvvm:DisposableUserControl
    x:Class="ICV.Control.ExplorerAddressBar.ExplorerAddressBar"
    xmlns:mvvm="clr-namespace:ImageComparisonViewer.Common.Mvvm;assembly=ImageComparisonViewer.Common"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:r="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NETCore"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:v="clr-namespace:ICV.Control.ExplorerAddressBar"
    xmlns:vb="clr-namespace:ICV.Control.ExplorerAddressBar.Behaviors"
    xmlns:vc="clr-namespace:ICV.Control.ExplorerAddressBar.Converters"
    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="False"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800"
    x:Name="ground"
    Height="20" >

    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <vc:InverseBooleanToVisibilityConverter x:Key="InvBoolToVisibilityConverter" />
            <!--
            <vc:InverseVisibilityConverter x:Key="InvVisibilityConverter" />
            -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ImageComparisonViewer.Common;component/Themes/DarkPurple.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Behaviors>
        <vb:WindowClickCommandBehavior ClickCommand="{Binding CollapsedTextBoxCommand, Mode=OneWay}" />
    </i:Interaction.Behaviors>

    <!-- ItemsControl攻略 ～ 外観のカスタマイズ http://grabacr.net/archives/1240 -->
    <!-- Standard Controls - ItemsControl http://yujiro15.net/YKSoftware/StandardControls_ItemsControl.html -->

    <!-- MainWindowが小さくなっても本来のサイズを取得するためScrollViewerで包む -->
    <ScrollViewer IsTabStop="False" 
                  VerticalScrollBarVisibility="Hidden"
                  HorizontalScrollBarVisibility="Hidden" >

        <!-- ItemsControlの不使用領域を含ませないためGridで包む -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- ディレクトリノード ◆Grid消せるが未対応 -->
            <Grid Height="{Binding ActualHeight, ElementName=ground, Mode=OneWay}"
                  Visibility="{Binding IsVisibleDirectoryNode.Value, Mode=OneWay,
                                       Converter={StaticResource BoolToVisibilityConverter}}" >
                <ContentControl x:Name="DirectoryPaths" />
            </Grid>

            <!-- ノード横の空白Grid(クリック用) -->
            <Border x:Name="marginBorder"
                    Grid.Column="1"
                    Background="{StaticResource BorderBrushKey}"
                    Visibility="{Binding IsVisibleDirectoryNode.Value, Mode=OneWay,
                                         Converter={StaticResource BoolToVisibilityConverter}}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <r:EventToReactiveCommand Command="{Binding VisibleTextBoxCommand, Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>

            <!-- 入力用(EnterKeyで確定) -->
            <TextBox x:Name="pathTextBox"
                     Grid.ColumnSpan="2"
                     Visibility="{Binding IsVisibleDirectoryNode.Value, Mode=OneWay,
                                          Converter={StaticResource InvBoolToVisibilityConverter}}"
                     Text="{Binding TargetDirectory.Value, Mode=OneWay}"
                     VerticalContentAlignment="Center" >
                <i:Interaction.Behaviors>
                    <vb:VisibilityFocusGetTextBoxBehavior />
                </i:Interaction.Behaviors>
                
                <TextBox.InputBindings>
                    <KeyBinding Gesture="Enter"
                                Command="{Binding TextInputCommand, Mode=OneWay}"
                                CommandParameter="{Binding Text, ElementName=pathTextBox, Mode=OneWay}" />
                </TextBox.InputBindings>
            </TextBox>
            
        </Grid>
    </ScrollViewer>

</mvvm:DisposableUserControl>
